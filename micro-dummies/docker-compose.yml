services:
  ruta-ms:
    image: public.ecr.aws/q2b4w2e6/dummies/ruta-ms:1.1.0
    container_name: ruta-ms
    environment:
      - SERVICE_NAME=RUTA MS
      - NORMATIVA_MS_URL=http://normativa-ms:3000
      - VEHICULO_MS_URL=http://vehiculo-ms:3000
      # --- Optional: DynamoDB logging (only if your image tag includes it) ---
      # - AWS_REGION=us-east-1
      # - AWS_ACCESS_KEY_ID=YOUR_KEY
      # - AWS_SECRET_ACCESS_KEY=YOUR_SECRET
      # - DDB_TABLE=route-db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
    depends_on:
      normativa-ms: { condition: service_healthy }
      vehiculo-ms:  { condition: service_healthy }
    ports: ["3001:3000"]
    pull_policy: always

  centro-distribucion-ms:
    image: public.ecr.aws/q2b4w2e6/dummies/centro-distribucion-ms:1.1.0
    container_name: centro-distribucion-ms
    environment:
      - SERVICE_NAME=CENTRO DE DISTRIBUCION MS
      # --- Optional DDB ---
      # - AWS_REGION=us-east-1
      # - AWS_ACCESS_KEY_ID=YOUR_KEY
      # - AWS_SECRET_ACCESS_KEY=YOUR_SECRET
      # - DDB_TABLE=distribution-center-db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
    ports: ["3002:3000"]
    pull_policy: always

  lote-ms:
    image: public.ecr.aws/q2b4w2e6/dummies/lote-ms:1.1.0
    container_name: lote-ms
    environment:
      - SERVICE_NAME=LOTE MS
      - NORMATIVA_MS_URL=http://normativa-ms:3000
      - CENTRO_MS_URL=http://centro-distribucion-ms:3000
      # --- Optional DDB ---
      # - AWS_REGION=us-east-1
      # - AWS_ACCESS_KEY_ID=YOUR_KEY
      # - AWS_SECRET_ACCESS_KEY=YOUR_SECRET
      # - DDB_TABLE=distribution-center-db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
    depends_on:
      normativa-ms:           { condition: service_healthy }
      centro-distribucion-ms: { condition: service_healthy }
    ports: ["3003:3000"]
    pull_policy: always

  vehiculo-ms:
    image: public.ecr.aws/q2b4w2e6/dummies/vehiculo-ms:1.1.0
    container_name: vehiculo-ms
    environment:
      - SERVICE_NAME=VEHICULO MS
      # --- Optional DDB ---
      # - AWS_REGION=us-east-1
      # - AWS_ACCESS_KEY_ID=YOUR_KEY
      # - AWS_SECRET_ACCESS_KEY=YOUR_SECRET
      # - DDB_TABLE=vehicle-db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
    ports: ["3004:3000"]
    pull_policy: always

  normativa-ms:
    image: public.ecr.aws/q2b4w2e6/dummies/normativa-ms:1.1.0
    container_name: normativa-ms
    environment:
      - SERVICE_NAME=NORMATIVA MS
      - ALERTA_MS_URL=http://alerta-ms:3000
      # --- Optional DDB ---
      # - AWS_REGION=us-east-1
      # - AWS_ACCESS_KEY_ID=YOUR_KEY
      # - AWS_SECRET_ACCESS_KEY=YOUR_SECRET
      # - DDB_TABLE=regulation-db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
    depends_on:
      alerta-ms: { condition: service_healthy }
    ports: ["3005:3000"]
    pull_policy: always

  alerta-ms:
    image: public.ecr.aws/q2b4w2e6/dummies/alerta-ms:1.1.0
    container_name: alerta-ms
    environment:
      - SERVICE_NAME=ALERTA MS
      # --- Optional DDB ---
      # - AWS_REGION=us-east-1
      # - AWS_ACCESS_KEY_ID=YOUR_KEY
      # - AWS_SECRET_ACCESS_KEY=YOUR_SECRET
      # - DDB_TABLE=alert-db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
    ports: ["3006:3000"]
    pull_policy: always

  venta-ms:
    image: public.ecr.aws/q2b4w2e6/dummies/venta-ms:1.1.0
    container_name: venta-ms
    environment:
      - SERVICE_NAME=VENTA MS
      - CENTRO_MS_URL=http://centro-distribucion-ms:3000
      - RUTA_MS_URL=http://ruta-ms:3000
      # --- Optional DDB ---
      # - AWS_REGION=us-east-1
      # - AWS_ACCESS_KEY_ID=YOUR_KEY
      # - AWS_SECRET_ACCESS_KEY=YOUR_SECRET
      # - DDB_TABLE=sale-db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
    depends_on:
      centro-distribucion-ms: { condition: service_healthy }
      ruta-ms:                { condition: service_healthy }
    ports: ["3007:3000"]
    pull_policy: always

  # Optional: a simple tester that exercises the 3 flows inside the Compose network.
  tester:
    image: curlimages/curl:latest
    container_name: ms-tester
    depends_on:
      venta-ms:                 { condition: service_healthy }
      lote-ms:                  { condition: service_healthy }
      normativa-ms:             { condition: service_healthy }
    command: >
      sh -lc '
        echo "== Health checks ==" &&
        curl -sf http://venta-ms:3000/health &&
        curl -sf http://lote-ms:3000/health &&
        curl -sf http://normativa-ms:3000/health &&
        echo &&
        echo "== FIRST FLOW: /register-sale ==" &&
        curl -s -X POST http://venta-ms:3000/register-sale -H "Content-Type: application/json" -d "{\"sku\":\"SKU-1\",\"amount\":1}" && echo &&
        echo "== SECOND FLOW: /register-lot ==" &&
        curl -s -X POST http://lote-ms:3000/register-lot -H "Content-Type: application/json" -d "{\"lot\":\"L-123\"}" && echo &&
        echo "== THIRD FLOW: /track-cold-chain-traceability ==" &&
        curl -s -X POST http://normativa-ms:3000/track-cold-chain-traceability -H "Content-Type: application/json" -d "{\"sku\":\"SKU-1\"}" && echo &&
        sleep 3600
      '
    profiles: ["test"]
